/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// #include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM     1
#define NAV     2
#define FUN     3

&encoder {
    status = "okay";
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>;
            layers = <0>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 26>;
            layers = <0>;
            bindings = <&kp TAB>;
        };
        combo_backspaceword {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <0>;
            bindings = <&kp RC(BSPC)>;
        };
        combo_caps {
            timeout-ms = <50>;
            key-positions = <37 48>;
            layers = <0>;
            bindings = <&kp CAPS>;
        };
        combo_caps1 {
            timeout-ms = <50>;
            key-positions = <29 32>;
            layers = <0>;
            bindings = <&kp CAPS>;
        };
    };
};

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // layer 0 ----------------------------------------------------------------------------------------------------------------------------
            // |   ESC   |    1    |    2    |    3    |    4    |    5    |---------|    6    |    7    |    8    |    9    |    0    |  DELETE |
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |---------|    Y    |    U    |    I    |    O    |    P    |BACKSPACE|
            // |  Mo(1)  |    A    |  alt/S  |  ctrl/D |  shft/F |    G    |---------|    H    |  shft/J |  ctrl/K |  alt/L  |    '    |  ENTER  |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |Vol+-mute|    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |  CTRL   |   WIN   |   ALT   |  Mo(2)  | L1/BSPC | L1/BSPC |  SPACE  | L2/SPC  | L2/SPC  |  Mo(3)  |   ALT   |   CTRL  |   CTRL  |

            bindings = <
&kp ESC    &kp N1   &kp N2     &kp N3      &kp N4       &kp N5                  &kp N6       &kp N7        &kp N8      &kp N9      &kp N0     &kp DEL
&kp TAB    &kp Q    &kp W      &kp E       &kp R        &kp T                   &kp Y        &kp U         &kp I       &kp O       &kp P      &kp BSPC
&mo 1      &kp A    &mt LALT S &mt LCTRL D &mt LSHIFT F &kp G                   &kp H        &mt RSHIFT J  &mt RCTRL K &mt RALT L  &kp APOS   &kp ENTER
&kp LSHIFT &kp Z    &kp X      &kp C       &kp V        &kp B       &kp C_MUTE  &kp N        &kp M         &kp COMMA   &kp DOT     &kp SLASH  &kp RSHIFT 
&kp LCTRL  &kp LGUI &kp LALT   &mo 2       &lt 1 BSPC   &lt 1 BSPC  &kp K_APP   &lt 2 SPACE  &lt 2 SPACE   &mo 3       &kp RALT    &kp RCTRL  &kp SEMI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        num_layer {
            // layer 1 ----------------------------------------------------------------------------------------------------------------------------
            // |   F1    |    F2   |    F3   |    F4   |    F5   |    F6   |---------|    F7   |    F8   |    F9   |   F10   |   F11   |   F12   |
            // |    `    |    !    |     @   |    #    |    $    |     %   |---------|    ^    |    &    |    *    |    (    |    )    |  DELETE |
            // |         |    1    |     2   |    3    |    4    |     5   |---------|    6    |    7    |    8    |    9    |    0    |         |
            // |         |         |   ~ `   |    {[   |    ]}   |    \    |MEDIA PP |    -    |    =    |    ;    |    '    |    ?    |         |
            // |         |         |         |         |         |         |         |         |         |         |         |         |         |

            bindings = <
   &kp F1  &kp F2   &kp F3    &kp F4    &kp F5   &kp F6             &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL &kp AT    &kp POUND &kp DLLR &kp PRCNT          &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp DEL
   &trans  &kp N1   &kp N2    &kp N3    &kp N4   &kp N5             &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp CAPS
   &trans  &trans   &kp GRAVE &kp LBKT  &kp RBKT &kp BSLH  &kp C_PP &kp MINUS &kp EQUAL &kp SEMI  &kp APOS  &kp QMARK &trans
   &trans  &trans   &trans    &trans    &trans   &trans    &trans   &kp PSCRN &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        nav_layer {
            // layer 2 ----------------------------------------------------------------------------------------------------------------------------
            // |         |         |         |         |         |         |---------|         |         |         |         |         |         |
            // |         |         |         |         |         |         |---------|   PGUP  |  HOME   |    UP   |   END   |         |         |
            // |         |         |         |         |    F    |         |---------|   PGDN  |  LEFT   |   DOWN  |  RIGHT  |         |         |
            // |         |         |         |         |         |         | ENCODER |         |         |         |         |         |         |
            // |         |         |         |         |         |         |         |         |         |         |         |         |         |

            bindings = < 
&trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans   &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &kp PG_UP &kp HOME &kp UP   &kp END   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans   &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans   &trans   &trans    &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };

 fun_layer {
            // layer 3 ----------------------------------------------------------------------------------------------------------------------------
            // |  BT 0   |  BT 1   |  BT 2   |  BT 3   |  BT 4   |         |---------|  FLASH  |         |         |         |         |         |
            // | BT Clr  |         |         |         |         |         |---------|         |         |         |         |         |         |
            // |         |         |         |         |         |         |---------|         |         |         |         |         |         |
            // |         |         |         |         |         |         | RGB TOG |         |         |         |         |         |         |
            // |  Reset  |         |         |         |         |         |OUTPT/TOG|         |         |         |         |         |         |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                 &bootloader  &trans  &trans  &trans  &trans  &trans
  &bt BT_CLR        &trans        &trans        &trans        &trans  &trans                 &trans       &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans        &trans  &trans                 &trans       &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans        &trans  &trans &rgb_ug RGB_TOG &trans       &trans  &trans  &trans  &trans  &trans
  &sys_reset        &trans        &trans        &trans        &trans  &trans &out OUT_TOG    &trans       &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
     
        };
    };
};
