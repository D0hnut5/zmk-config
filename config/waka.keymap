/*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// #include <dt-bindings/zmk/rgb.h>

#define DEFAULT  0
#define RAISE    1
#define FUNCTION 2

&encoder_1 {
    status = "okay";
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // layer 0 ----------------------------------------------------------------------------------------------------------------------------
            // |   ESC   |    1    |    2    |    3    |    4    |    5    |---------|    6    |    7    |    8    |    9    |    0    |  DELETE |
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |---------|    Y    |    U    |    I    |    O    |    P    |BACKSPACE|
            // |  Mo(1)  |    A    |    S    |    D    |    F    |    G    |---------|    H    |    J    |    K    |    L    |    '    |  ENTER  |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |Vol+-mute|    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |  CTRL   |   WIN   |   ALT   |  Mo(1)  |BACKSPACE|BACKSPACE|  SPACE  |  SPACE  |  SPACE  |  Mo(2)  |   ALT   |   CTRL  |   CTRL  |

            bindings = <
   &kp ESC    &kp N1    &kp N2  &kp N3     &kp N4     &kp N5                 &kp N6     &kp N7     &kp N8    &kp N9            &kp N0        &kp DELETE
   &kp TAB     &kp Q     &kp W   &kp E      &kp R      &kp T                  &kp Y      &kp U      &kp I     &kp O             &kp P        &kp BSPC
     &mo 1     &kp A     &kp S   &kp D      &kp F      &kp G                  &kp H      &kp J      &kp K     &kp L  &kp SINGLE_QUOTE        &kp ENTER
&kp LSHIFT     &kp Z     &kp X   &kp C      &kp V      &kp B  &kp C_MUTE      &kp N      &kp M  &kp COMMA   &kp DOT         &kp SLASH        &kp RSHIFT
 &kp LCTRL  &kp LGUI  &kp LALT   &mo 1  &lt 1 BSPC  &lt 1 BSPC   &lt 1 SPACE  &lt 1 SPACE  &lt 1 SPACE      &mo 2  &kp RALT         &kp RCTRL  &kp SEMI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // layer 1 ----------------------------------------------------------------------------------------------------------------------------
            // |   F1    |    F2   |    F3   |    F4   |    F5   |    F6   |---------|    F7   |    F8   |    F9   |   F10   |   F11   |   F12   |
            // |    `    |    !    |     @   |    #    |    $    |     %   |---------|    ^    |    &    |    *    |    (    |    )    |  DELETE |
            // |         |    1    |     2   |    3    |    4    |     5   |---------|    6    |    7    |    8    |    9    |    0    |         |
            // |         |         |   ~ `   |    {[   |    ]}   |    \    |         |    -    |    =    |    ;    |    '    |    ?    |         |
            // |         |         |         |         |         |         |         |         |         |         |         |         |         |

            bindings = <
   &kp F1  &kp F2   &kp F3    &kp F4    &kp F5   &kp F6            &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL &kp AT    &kp POUND &kp DLLR &kp PRCNT         &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp DEL
   &trans  &kp N1   &kp N2    &kp N3    &kp N4   &kp N5            &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp CAPS
   &trans  &trans   &kp GRAVE &kp LBKT  &kp RBKT &kp BSLH  &trans  &kp MINUS &kp EQUAL &kp SEMI  &kp APOS  &kp QMARK &trans
   &trans  &trans   &trans    &trans    &trans   &trans    &trans  &trans    &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        function_layer {
            // layer 2 ----------------------------------------------------------------------------------------------------------------------------
            // |  BT 0   |  BT 1   |  BT 2   |  BT 3   |  BT 4   |         |---------|  FLASH  |         |         |         |         |         |
            // | BT Clr  |         |         |         |         |         |---------|         |         |         |         |         |         |
            // |         |         |         |         |         |         |---------|         |         |         |         |         |         |
            // |         |         |         |         |         |         | Encoder |         |         |         |         |         |         |
            // |  Reset  |         |         |         |         |         |         |         |         |         |         |         |         |

            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans          &bootloader  &trans  &trans  &trans  &trans  &trans
  &bt BT_CLR        &trans        &trans        &trans        &trans  &trans               &trans  &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans        &trans  &trans               &trans  &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans        &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
  &sys_reset        &trans        &trans        &trans        &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
